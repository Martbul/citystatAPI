generator client {
  provider = "go run github.com/steebchen/prisma-client-go"
  output   = "./db"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id // Clerk user ID
  email             String    @unique
  firstName         String?
  lastName          String?
  userName          String?
  imageUrl          String?
  phoneNumber       String?
  cityStats         CityStat?
  role              Role      @default(USER)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  completedTutorial Boolean   @default(false)
  Settings          Settings?

  friends  Friend[] @relation("FriendsFromUser")
  friendOf Friend[] @relation("FriendsToUser")
  note     String?  @default("")
  status   Status   @default(ACTIVE)

  @@map("users")
}
model Friend {
  id        String  @id @default(cuid())
  userId    String  @map("user_id")
  friendId  String  @map("friend_id")
  firstName String?
  lastName  String?
  userName  String  // Changed from userName to userName (consistent camelCase)
  imageUrl  String? // Changed from imageUrl to imageUrl (consistent camelCase)

  user   User @relation("FriendsFromUser", fields: [userId], references: [id])
  friend User @relation("FriendsToUser", fields: [friendId], references: [id])

  createdAt DateTime @default(now())

  @@unique([userId, friendId])
  @@map("user_friends")
}

model CityStat {
  id                 String   @id @default(cuid())
  name               String
  state              String
  country            String
  population         Int?
  area               Float?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  userId             String   @unique
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  totalStreetsWalked Int      @default(0)
  totalKilometers    Float    @default(0)
  cityCoveragePct    Float    @default(0)
  daysActive         Int      @default(0)
  longestStreakDays  Int      @default(0)

  streetWalks StreetWalk[]
  settingsId  String?

  @@map("city_stats")
}

model StreetWalk {
  id         String   @id @default(cuid())
  cityStat   CityStat @relation(fields: [cityStatId], references: [id], onDelete: Cascade)
  cityStatId String

  streetName String
  geoJson    Json // Store geolocation path (e.g., Mapbox LineString)
  distanceKm Float  @default(0)

  @@map("street_walks")
}

model Settings {
  id     String @id @default(cuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  theme    Theme    @default(Light)
  language Language @default(En)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("settings")
}

enum Language {
  En
  Es
  Fr
  De
  Zh
  Ja
  Ru
  Bg
}

enum Theme {
  Light
  Dark
  Auto
}

enum Status {
  ACTIVE
  SLEEP
  OFFLINE
  BANNED
  PENDING
  IDLE
  INVISIBLE
}

enum Role {
  USER
  ADMIN
  MODERATOR
}
